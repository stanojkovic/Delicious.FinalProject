@using Delicious.Models
@model Delicious.Models.Recipe
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row mt-3">
        <div class="col-lg-12">
            <h2>Kreirajte novi recept !</h2>
        </div>
    </div>
</div>



@using (Html.BeginForm("Create", "Recipes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="container">
    <div class="row">

        <div class="col-6">
            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.RecipeName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RecipeName, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control col-md-12", @rows = 10 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Category.Id, new SelectList(ViewBag.Categories, "Id", "CategoriesName"), new { @class = " text-success col-md-12" })
                        @Html.ValidationMessageFor(model => model.Category)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input name="img" type="file" accept=".jpg, .png, .gif">
                    </div>
                </div>
                <hr>
            </div>
        </div>
        <div class="col-6">
            <div class="form-horizontal">
                <hr />
                <h4 class="mb-4">Odaberite sastojke !</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-10">
                        <div class="row">
                            @for (int i = 0; i < Model.Ingredients.Count; i++)
                            {
                                @Html.Hidden(string.Format("Ingredients[{0}].Ingredient.Id", i), Model.Ingredients.ElementAt(i).Ingredient.Id)
                                //ovo sluzi samo da prosledi ime do servera za slucaj da treba opet da se prikaze forma usled greske
                                @Html.Hidden(string.Format("Ingredients[{0}].Ingredient.IngredientName", i), Model.Ingredients.ElementAt(i).Ingredient.IngredientName)
                                <div class="col-lg-1">
                                    @Html.CheckBox(string.Format("Ingredients[{0}].Selected", i), Model.Ingredients.ElementAt(i).Selected)
                                </div>
                                <div class="col-lg-6">
                                    @Html.Label(Model.Ingredients.ElementAt(i).Ingredient.IngredientName)
                                </div>
                                <div class="col-lg-3">
                                    @Html.TextBox(string.Format("Ingredients[{0}].Quantity", i), Model.Ingredients.ElementAt(i).Quantity, new { style = "width:105px;" })
                                </div>
                                <div class="col-lg-2">
                                    @Html.DropDownList(string.Format("Ingredients[{0}].UnitOfMeasure", i), new SelectList(Enum.GetValues(typeof(Delicious.Models.RecipeIngredient.Unit))), new { style = "height:30px;" })
                                </div>

                                <br />
                            }
                            <div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
   
    <div class="container">
        <div class="row">
            <div class="col-lg-2 offset-10">
                <div class="form-group">

                    <input type="submit" value="Kreirajte recept" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
</div>
                           
  
    
}





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

